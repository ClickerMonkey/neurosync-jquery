{"version":3,"sources":["rekord-jquery.min.js"],"names":["root","factory","define","amd","Rekord","jQuery","module","exports","global","require","this","$","undefined","Rest","database","RestFactory","api","Rekord_rest","call","ajax","options","buildURL","db","model","$key","win","window","noop","transfer","format","isFormatInput","isEmpty","isObject","rest","prototype","removeTrailingSlash","x","charAt","length","substring","all","success","failure","execute","get","create","encoded","update","remove","query","url","data","method","encode","params","prefix","p","str","hasOwnProperty","k","v","push","encodeURIComponent","join","extraOptions","offlineValue","debug","Debugs","REST","forceOffline","onRestSuccess","textStatus","jqXHR","onRestError","errorThrown","status","vars","error","cache","dataType","paramString","queryIndex","indexOf","adjustOptions","setRest","RestClass"],"mappings":"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","file":"rekord-jquery.min.js","sourcesContent":["/* rekord-jquery 1.5.0 - A rekord binding to jquery - implementing Rekord.rest by Philip Diffenderfer */\n// UMD (Universal Module Definition)\n(function (root, factory)\n{\n  if (typeof define === 'function' && define.amd) // jshint ignore:line\n  {\n    // AMD. Register as an anonymous module.\n    define(['rekord', 'jQuery'], function(Rekord, jQuery) { // jshint ignore:line\n      return factory(root, Rekord, jQuery);\n    });\n  }\n  else if (typeof module === 'object' && module.exports)  // jshint ignore:line\n  {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(global, require('rekord'), require('jQuery'));  // jshint ignore:line\n  }\n  else\n  {\n    // Browser globals (root is window)\n    root.Rekord = factory(root, root.Rekord, root.jQuery);\n  }\n}(this, function(global, Rekord, $, undefined)\n{\n\n  var win = typeof window !== 'undefined' ? window : global; // jshint ignore:line\n\n  var noop = Rekord.noop;\n  var transfer = Rekord.transfer;\n  var format = Rekord.format;\n  var isFormatInput = Rekord.isFormatInput;\n  var isEmpty = Rekord.isEmpty;\n  var isObject = Rekord.isObject;\n\n  var Rekord_rest = Rekord.rest;\n\n  function Rest(database)\n  {\n    this.database = database;\n  }\n\n  Rest.prototype =\n  {\n    removeTrailingSlash: function(x)\n    {\n      return x.charAt(x.length - 1) === '/' ? x.substring(0, x.length - 1) : x;\n    },\n    buildURL: function(model)\n    {\n      return this.removeTrailingSlash( Rekord.jQuery.buildURL( this.database, model ) );\n    },\n    all: function( options, success, failure )\n    {\n      this.execute( 'GET', null, undefined, this.buildURL(), options, success, failure, [] );\n    },\n    get: function( model, options, success, failure )\n    {\n      this.execute( 'GET', model, undefined, this.buildURL( model ), options, success, failure );\n    },\n    create: function( model, encoded, options, success, failure )\n    {\n      this.execute( 'POST', model, encoded, this.buildURL(), options, success, failure, {} );\n    },\n    update: function( model, encoded, options, success, failure )\n    {\n      this.execute( 'PUT', model, encoded, this.buildURL( model ), options, success, failure, {} );\n    },\n    remove: function( model, options, success, failure )\n    {\n      this.execute( 'DELETE', model, undefined, this.buildURL( model ), options, success, failure, {} );\n    },\n    query: function( url, data, options, success, failure )\n    {\n      var method = isEmpty( data ) ? 'GET' : 'POST';\n\n      this.execute( method, null, data, url, options, success, failure );\n    },\n    encode: function(params, prefix)\n    {\n      var str = [], p;\n\n      for (var p in params)\n      {\n        if ( params.hasOwnProperty( p ) )\n        {\n          var k = prefix ? prefix + '[' + p + ']' : p;\n          var v = params[ p ];\n\n          str.push( isObject( v ) ? this.encode(v, k) : win.encodeURIComponent( k ) + '=' + win.encodeURIComponent( v ) );\n        }\n      }\n\n      return str.join('&');\n    },\n    execute: function( method, model, data, url, extraOptions, success, failure, offlineValue )\n    {\n      Rekord.debug( Rekord.Debugs.REST, this, method, url, data );\n\n      if ( Rekord.forceOffline )\n      {\n        failure( offlineValue, 0 );\n      }\n      else\n      {\n        var onRestSuccess = function(data, textStatus, jqXHR)\n        {\n          success( data );\n        };\n\n        var onRestError = function(jqXHR, textStatus, errorThrown)\n        {\n          failure( null, jqXHR.status );\n        };\n\n        var vars = transfer( Rekord.jQuery.vars, transfer( model, {} ) );\n        var options = transfer( Rekord.jQuery.options, {\n          method: method,\n          data: data,\n          url: url,\n          success: onRestSuccess,\n          error: onRestError,\n          cache: false,\n          dataType: 'json'\n        });\n\n        if ( isObject( extraOptions ) )\n        {\n          transfer( options, extraOptions );\n\n          if ( isObject( extraOptions.params ) )\n          {\n            var paramString = this.encode( extraOptions.params );\n            var queryIndex = options.url.indexOf('?');\n\n            options.url += queryIndex === -1 ? '?' : '&';\n            options.url += paramString;\n          }\n\n          if ( isObject( extraOptions.vars ) )\n          {\n            transfer( extraOptions.vars, vars );\n          }\n        }\n\n        Rekord.jQuery.adjustOptions( options, this.database, method, model, data, url, vars, extraOptions, success, failure );\n\n        if ( isFormatInput( options.url ) )\n        {\n          options.url = format( options.url, vars );\n        }\n\n        Rekord.jQuery.ajax( options );\n      }\n    }\n  };\n\n  function RestFactory(database)\n  {\n    if ( !database.api )\n    {\n      return Rekord_rest.call( this, database );\n    }\n\n    return new Rest( database );\n  }\n\n  function ajax(options)\n  {\n    $.ajax( options );\n  }\n\n  function buildURL(db, model)\n  {\n    return model ? db.api + model.$key() : db.api;\n  }\n\n  Rekord.setRest( RestFactory, true );\n\n  Rekord.jQuery =\n  {\n    rest: RestFactory,\n    options: {},\n    vars: {},\n    adjustOptions: noop,\n    ajax: ajax,\n    buildURL: buildURL,\n    RestClass: Rest\n  };\n\n  return Rekord;\n\n}));\n"],"sourceRoot":"/source/"}