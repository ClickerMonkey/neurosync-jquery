{"version":3,"sources":["rekord-jquery.min.js"],"names":["root","factory","define","amd","Rekord","jQuery","module","exports","global","require","this","$","undefined","Rest","database","RestFactory","api","Rekord_rest","call","ajax","options","noop","isEmpty","transfer","rest","prototype","removeTrailingSlash","x","charAt","length","substring","all","success","failure","execute","get","model","$key","create","encoded","update","remove","query","url","data","method","offlineValue","debug","Debugs","REST","forceOffline","onRestSuccess","textStatus","jqXHR","onRestError","errorThrown","status","cache","dataType","adjustOptions","setRest","RestClass"],"mappings":"CAEC,SAAUA,EAAMC,GAEO,kBAAXC,SAAyBA,OAAOC,IAGzCD,QAAQ,SAAU,UAAW,SAASE,EAAQC,GAC5C,MAAOJ,GAAQD,EAAMI,EAAQC,KAGN,gBAAXC,SAAuBA,OAAOC,QAK5CD,OAAOC,QAAUN,EAAQO,OAAQC,QAAQ,UAAWA,QAAQ,WAK5DT,EAAKI,OAASH,EAAQD,EAAMA,EAAKI,OAAQJ,EAAKK,SAEhDK,KAAM,SAASF,EAAQJ,EAAQO,EAAGC,GASlC,QAASC,GAAKC,GAEZJ,KAAKI,SAAWA,EAuElB,QAASC,GAAYD,GAEnB,MAAMA,GAASE,IAKR,GAAIH,GAAMC,GAHRG,EAAYC,KAAMR,KAAMI,GAMnC,QAASK,GAAKC,GAEZT,EAAEQ,KAAMC,GA3FV,GAAIC,GAAOjB,EAAOiB,KACdC,EAAUlB,EAAOkB,QACjBC,EAAWnB,EAAOmB,SAElBN,EAAcb,EAAOoB,IAqGzB,OA9FAX,GAAKY,WAEHC,oBAAqB,SAASC,GAE5B,MAAkC,MAA3BA,EAAEC,OAAOD,EAAEE,OAAS,GAAaF,EAAEG,UAAU,EAAGH,EAAEE,OAAS,GAAKF,GAEzEI,IAAK,SAAUC,EAASC,GAEtBvB,KAAKwB,QAAS,MAAO,KAAMtB,EAAWF,KAAKI,SAASE,IAAKgB,EAASC,OAEpEE,IAAK,SAAUC,EAAOJ,EAASC,GAE7BvB,KAAKwB,QAAS,MAAOE,EAAOxB,EAAWF,KAAKgB,oBAAqBhB,KAAKI,SAASE,IAAMoB,EAAMC,QAAUL,EAASC,IAEhHK,OAAQ,SAAUF,EAAOG,EAASP,EAASC,GAEzCvB,KAAKwB,QAAS,OAAQE,EAAOG,EAAS7B,KAAKgB,oBAAqBhB,KAAKI,SAASE,KAAOgB,EAASC,OAEhGO,OAAQ,SAAUJ,EAAOG,EAASP,EAASC,GAEzCvB,KAAKwB,QAAS,MAAOE,EAAOG,EAAS7B,KAAKgB,oBAAqBhB,KAAKI,SAASE,IAAMoB,EAAMC,QAAUL,EAASC,OAE9GQ,OAAQ,SAAUL,EAAOJ,EAASC,GAEhCvB,KAAKwB,QAAS,SAAUE,EAAOxB,EAAWF,KAAKgB,oBAAqBhB,KAAKI,SAASE,IAAMoB,EAAMC,QAAUL,EAASC,OAEnHS,MAAO,SAAUC,EAAKC,EAAMZ,EAASC,GAEnC,GAAIY,GAASvB,EAASsB,GAAS,MAAQ,MAEvClC,MAAKwB,QAASW,EAAQ,KAAMD,EAAMD,EAAKX,EAASC,IAElDC,QAAS,SAAUW,EAAQT,EAAOQ,EAAMD,EAAKX,EAASC,EAASa,GAI7D,GAFA1C,EAAO2C,MAAO3C,EAAO4C,OAAOC,KAAMvC,KAAMmC,EAAQF,EAAKC,GAEhDxC,EAAO8C,aAEVjB,EAASa,EAAc,OAGzB,CACE,GAAIK,GAAgB,SAASP,EAAMQ,EAAYC,GAE7CrB,EAASY,IAGPU,EAAc,SAASD,EAAOD,EAAYG,GAE5CtB,EAAS,KAAMoB,EAAMG,SAGnBpC,EAAUG,EAAUnB,EAAOC,OAAOe,SACpCyB,OAAQA,EACRD,KAAMA,EACND,IAAKA,EACLX,QAASmB,EACTlB,QAASqB,EACTG,OAAO,EACPC,SAAU,QAGZtD,GAAOC,OAAOsD,cAAevC,EAASV,KAAKI,SAAU+B,EAAQT,EAAOQ,EAAMD,EAAKX,EAASC,GACxF7B,EAAOC,OAAOc,KAAMC,MAoB1BhB,EAAOwD,QAAS7C,GAAa,GAE7BX,EAAOC,QAELmB,KAAMT,EACNK,WACAuC,cAAetC,EACfF,KAAMA,EACN0C,UAAWhD,GAGNT","file":"rekord-jquery.min.js","sourcesContent":["/* rekord-jquery 1.4.2 - A rekord binding to jquery - implementing Rekord.rest by Philip Diffenderfer */\n// UMD (Universal Module Definition)\n(function (root, factory)\n{\n  if (typeof define === 'function' && define.amd) // jshint ignore:line\n  {\n    // AMD. Register as an anonymous module.\n    define(['Rekord', 'jQuery'], function(Rekord, jQuery) { // jshint ignore:line\n      return factory(root, Rekord, jQuery);\n    });\n  }\n  else if (typeof module === 'object' && module.exports)  // jshint ignore:line\n  {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(global, require('Rekord'), require('jQuery'));  // jshint ignore:line\n  }\n  else\n  {\n    // Browser globals (root is window)\n    root.Rekord = factory(root, root.Rekord, root.jQuery);\n  }\n}(this, function(global, Rekord, $, undefined)\n{\n\n  var noop = Rekord.noop;\n  var isEmpty = Rekord.isEmpty;\n  var transfer = Rekord.transfer;\n\n  var Rekord_rest = Rekord.rest;\n\n  function Rest(database)\n  {\n    this.database = database;\n  }\n\n  Rest.prototype =\n  {\n    removeTrailingSlash: function(x)\n    {\n      return x.charAt(x.length - 1) === '/' ? x.substring(0, x.length - 1) : x;\n    },\n    all: function( success, failure )\n    {\n      this.execute( 'GET', null, undefined, this.database.api, success, failure, [] );\n    },\n    get: function( model, success, failure )\n    {\n      this.execute( 'GET', model, undefined, this.removeTrailingSlash( this.database.api + model.$key() ), success, failure );\n    },\n    create: function( model, encoded, success, failure )\n    {\n      this.execute( 'POST', model, encoded, this.removeTrailingSlash( this.database.api ), success, failure, {} );\n    },\n    update: function( model, encoded, success, failure )\n    {\n      this.execute( 'PUT', model, encoded, this.removeTrailingSlash( this.database.api + model.$key() ), success, failure, {} );\n    },\n    remove: function( model, success, failure )\n    {\n      this.execute( 'DELETE', model, undefined, this.removeTrailingSlash( this.database.api + model.$key() ), success, failure, {} );\n    },\n    query: function( url, data, success, failure )\n    {\n      var method = isEmpty( data ) ? 'GET' : 'POST';\n\n      this.execute( method, null, data, url, success, failure );\n    },\n    execute: function( method, model, data, url, success, failure, offlineValue )\n    {\n      Rekord.debug( Rekord.Debugs.REST, this, method, url, data );\n\n      if ( Rekord.forceOffline )\n      {\n        failure( offlineValue, 0 );\n      }\n      else\n      {\n        var onRestSuccess = function(data, textStatus, jqXHR)\n        {\n          success( data );\n        };\n\n        var onRestError = function(jqXHR, textStatus, errorThrown)\n        {\n          failure( null, jqXHR.status );\n        };\n\n        var options = transfer( Rekord.jQuery.options, {\n          method: method,\n          data: data,\n          url: url,\n          success: onRestSuccess,\n          failure: onRestError,\n          cache: false,\n          dataType: 'json'\n        });\n\n        Rekord.jQuery.adjustOptions( options, this.database, method, model, data, url, success, failure );\n        Rekord.jQuery.ajax( options );\n      }\n    }\n  };\n\n  function RestFactory(database)\n  {\n    if ( !database.api )\n    {\n      return Rekord_rest.call( this, database );\n    }\n\n    return new Rest( database );\n  }\n\n  function ajax(options)\n  {\n    $.ajax( options );\n  }\n\n  Rekord.setRest( RestFactory, true );\n\n  Rekord.jQuery =\n  {\n    rest: RestFactory,\n    options: {},\n    adjustOptions: noop,\n    ajax: ajax,\n    RestClass: Rest\n  };\n\n  return Rekord;\n\n}));\n"],"sourceRoot":"/source/"}